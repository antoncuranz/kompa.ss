// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "components": {"schemas":{"entity.Airport":{"properties":{"iata":{"type":"string"},"location":{"$ref":"#/components/schemas/entity.Location"},"municipality":{"type":"string"},"name":{"type":"string"}},"required":["iata","location","municipality","name"],"type":"object"},"entity.AmbiguousFlightChoice":{"properties":{"departureDateTime":{"type":"string"},"destinationIata":{"type":"string"},"originIata":{"type":"string"}},"required":["departureDateTime","destinationIata","originIata"],"type":"object"},"entity.ErrAmbiguousFlightRequest":{"additionalProperties":{"items":{"$ref":"#/components/schemas/entity.AmbiguousFlightChoice"},"type":"array"},"type":"object"},"entity.Flight":{"properties":{"legs":{"items":{"$ref":"#/components/schemas/entity.FlightLeg"},"type":"array","uniqueItems":false}},"required":["legs"],"type":"object"},"entity.FlightLeg":{"properties":{"aircraft":{"nullable":true,"type":"string"},"airline":{"type":"string"},"amadeusFlightDate":{"nullable":true,"type":"string"},"arrivalDateTime":{"type":"string"},"departureDateTime":{"type":"string"},"destination":{"$ref":"#/components/schemas/entity.Airport"},"durationInMinutes":{"type":"integer"},"flightNumber":{"type":"string"},"origin":{"$ref":"#/components/schemas/entity.Airport"}},"required":["aircraft","airline","amadeusFlightDate","arrivalDateTime","departureDateTime","destination","durationInMinutes","flightNumber","origin"],"type":"object"},"entity.Location":{"properties":{"latitude":{"type":"number"},"longitude":{"type":"number"}},"required":["latitude","longitude"],"type":"object"},"entity.Train":{"properties":{"legs":{"items":{"$ref":"#/components/schemas/entity.TrainLeg"},"type":"array","uniqueItems":false},"refreshToken":{"type":"string"}},"required":["legs","refreshToken"],"type":"object"},"entity.TrainLeg":{"properties":{"arrivalDateTime":{"type":"string"},"departureDateTime":{"type":"string"},"destination":{"$ref":"#/components/schemas/entity.TrainStation"},"durationInMinutes":{"type":"integer"},"lineName":{"type":"string"},"operatorName":{"type":"string"},"origin":{"$ref":"#/components/schemas/entity.TrainStation"}},"required":["arrivalDateTime","departureDateTime","destination","durationInMinutes","lineName","operatorName","origin"],"type":"object"},"entity.TrainStation":{"properties":{"id":{"type":"string"},"location":{"$ref":"#/components/schemas/entity.Location"},"name":{"type":"string"}},"required":["id","location","name"],"type":"object"},"request.Flight":{"properties":{"legs":{"items":{"$ref":"#/components/schemas/request.FlightLeg"},"type":"array","uniqueItems":false}},"required":["legs"],"type":"object"},"request.FlightLeg":{"properties":{"date":{"example":"2026-01-30","type":"string"},"flightNumber":{"example":"EK412","type":"string"},"originAirport":{"example":"SYD","nullable":true,"type":"string"}},"required":["date","flightNumber","originAirport"],"type":"object"},"request.Train":{"properties":{"departureDate":{"example":"2025-09-20","type":"string"},"fromStationId":{"example":"8011113","type":"string"},"toStationId":{"example":"8000261","type":"string"},"trainNumbers":{"example":["ICE707"],"items":{"type":"string"},"type":"array","uniqueItems":false},"viaStationId":{"example":"8596008","nullable":true,"type":"string"}},"required":["departureDate","fromStationId","toStationId","trainNumbers","viaStationId"],"type":"object"},"response.Error":{"properties":{"detail":{"nullable":true,"type":"string"},"error":{"type":"string"}},"required":["error"],"type":"object"}}},
    "info": {"description":"{{escape .Description}}","title":"{{.Title}}","version":"{{.Version}}"},
    "externalDocs": {"description":"","url":""},
    "paths": {"/flights":{"post":{"operationId":"postFlight","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.Flight"}}},"description":"flight","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/entity.Flight"}}},"description":"OK"},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/entity.ErrAmbiguousFlightRequest"}}},"description":"Unprocessable Entity"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.Error"}}},"description":"Internal Server Error"}},"summary":"Find flight","tags":["flights"]}},"/geocoding/location":{"get":{"operationId":"getLocation","parameters":[{"description":"location query","in":"query","name":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/entity.Location"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.Error"}}},"description":"Internal Server Error"}},"summary":"Lookup location","tags":["geocoding"]}},"/geocoding/station":{"get":{"operationId":"getTrainStation","parameters":[{"description":"station query","in":"query","name":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/entity.TrainStation"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.Error"}}},"description":"Internal Server Error"}},"summary":"Lookup train station","tags":["geocoding"]}},"/trains":{"post":{"operationId":"postTrainJourney","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/request.Train"}}},"description":"train journey","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/entity.Train"}}},"description":"OK"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/response.Error"}}},"description":"Internal Server Error"}},"summary":"Find train journey","tags":["trains"]}}},
    "openapi": "3.1.0",
    "servers": [
        {"url":"http://127.0.0.1:8080/api/v1"}
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Title:            "Kompass Transportation API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
