// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package converter

import (
	civil "cloud.google.com/go/civil"
	response "kompass/internal/controller/http/v1/response"
	entity "kompass/internal/entity"
)

type TripConverterImpl struct{}

func (c *TripConverterImpl) ConvertTrip(source entity.Trip) response.Trip {
	var responseTrip response.Trip
	responseTrip.ID = source.ID
	responseTrip.Name = source.Name
	responseTrip.StartDate = c.civilDateToCivilDate(source.StartDate)
	responseTrip.EndDate = c.civilDateToCivilDate(source.EndDate)
	responseTrip.Description = source.Description
	responseTrip.ImageUrl = source.ImageUrl
	return responseTrip
}
func (c *TripConverterImpl) ConvertTrips(source []entity.Trip) []response.Trip {
	var responseTripList []response.Trip
	if source != nil {
		responseTripList = make([]response.Trip, len(source))
		for i := 0; i < len(source); i++ {
			responseTripList[i] = c.ConvertTrip(source[i])
		}
	}
	return responseTripList
}
func (c *TripConverterImpl) civilDateToCivilDate(source civil.Date) civil.Date {
	return source
}
